{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    //run second time\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      //run first time\n      // console.log(this.props);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      }, this.props.stream.title);\n    }\n  }\n\n} //ownProps reference of the props object\n\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit); //election reducer vs url based selection\n//refresh page undefind\n//but click edit page from otehr \n//with react-router, each component needs to be designed to work in isolation (fetch its own data","map":{"version":3,"sources":["/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK7BC,UAAD,IACT;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,KARsC;AAAA;;AACvCG,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWV,WAAX,CAAuB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAKDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAGK;AACH;AACA;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAAxB,CAAP;AACD;AACF;;AAlBsC,C,CAuBzC;;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C;AACA,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAHD;;AAKA,eAAed,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,UAA1C,CAAf,C,CAGA;AAEA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    //run second time\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  onSubmit=(formValues)=>\n  {\n    console.log(formValues);\n  };\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading...</div>;\n    }\n    else {\n      //run first time\n      // console.log(this.props);\n      return <div>{this.props.stream.title}</div>;\n    }\n  }\n\n}\n\n\n//ownProps reference of the props object\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps);\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\n\n\n//election reducer vs url based selection\n\n//refresh page undefind\n//but click edit page from otehr \n\n//with react-router, each component needs to be designed to work in isolation (fetch its own data"]},"metadata":{},"sourceType":"module"}