{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n/*const StreamList = () => {\n  return <div>StreamList</div>;\n};*/\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return;\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"StreamList\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList); // can put null first export default connect(null,)(StreamList);\n//class compoent beacuse wanna call action creater in life cycle method\n// leave them as a object form in reducer because it make it easily to update add and delete records\n//but when we takes these streams and get them into a component through mapstatetoprops usually turn the object into an actual array  , make sure easy makeover  and map function","map":{"version":3,"sources":["/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderList","streams","map","stream","render","console","log","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA;;;;AAIA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,UAAU,GACV;AACE,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAE;AACpC;AACD,KAFM,CAAP;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,OAAvB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAdsC;;AAgBzC,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAEjC,SAAO;AAAEP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB;AAAX,GAAP;AACD,CAHD;;AAIA,eAAeP,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf,C,CACA;AAGA;AAKA;AACA","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n/*const StreamList = () => {\n  return <div>StreamList</div>;\n};*/\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList()\n  {\n    return this.props.streams.map(stream=>{\n      return\n    });\n  }\n  render() {\n    console.log(this.props.streams);\n    return <div>StreamList</div>;\n  }\n}\nconst mapStateToProps = (state) => {\n\n  return { streams: Object.values(state.streams) };\n};\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n// can put null first export default connect(null,)(StreamList);\n\n\n//class compoent beacuse wanna call action creater in life cycle method\n\n\n\n\n// leave them as a object form in reducer because it make it easily to update add and delete records\n//but when we takes these streams and get them into a component through mapstatetoprops usually turn the object into an actual array  , make sure easy makeover  and map function"]},"metadata":{},"sourceType":"module"}