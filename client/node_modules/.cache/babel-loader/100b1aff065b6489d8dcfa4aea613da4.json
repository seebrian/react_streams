{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  //cannot assume that the stream has already been loaded up\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const actions = /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui  button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"Cancel\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, \"StreamDelete\", /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: \"Are you sure you want to delete this stream?\",\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst constmapStateToProps = state => {};\n\nexport default connect(null, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","StreamDelete","Component","componentDidMount","console","log","props","match","params","id","renderActions","actions","render","push","constmapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AACA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzC;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,aAAa,GAAG;AACd,UAAMC,OAAO,gBACX,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,eAAb;AAA6B,MAAA,OAAO,EAAC,8CAArC;AAAoF,MAAA,OAAO,EAAE,KAAKF,aAAL,EAA7F;AAAmH,MAAA,SAAS,EAAE,MAAMX,OAAO,CAACc,IAAR,CAAa,GAAb,CAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AAtBwC;;AAyB3C,MAAMC,oBAAoB,GAAEC,KAAD,IAAS,CAEnC,CAFD;;AAGA,eAAelB,OAAO,CAAC,IAAD,EAAM;AAACG,EAAAA;AAAD,CAAN,CAAP,CAA4BC,YAA5B,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport {fetchStream} from '../../actions';\nclass StreamDelete extends React.Component {\n  //cannot assume that the stream has already been loaded up\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  renderActions() {\n    const actions = (\n      <React.Fragment>\n        <button className=\"ui button negative\">Delete</button>\n        <button className=\"ui  button\">Cancel</button>\n      </React.Fragment>\n    );\n  }\n  render() {\n    return (\n      <div>\n        StreamDelete\n        <Modal title=\"Delete Stream\" content=\"Are you sure you want to delete this stream?\" actions={this.renderActions()} onDismiss={() => history.push('/')} />\n\n      </div>\n    );\n  };\n  //pass JSX element to action\n}\nconst constmapStateToProps=(state)=>{\n\n};\nexport default connect(null,{fetchStream})(StreamDelete);"]},"metadata":{},"sourceType":"module"}