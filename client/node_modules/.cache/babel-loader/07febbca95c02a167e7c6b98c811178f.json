{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    //run second time\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      retur;\n    } //run first time\n    // console.log(this.props);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, \"StreamEdit\");\n  }\n\n} //ownProps reference of the props object\n\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit); //election reducer vs url based selection\n//refresh page undefind\n//but click edit page from otehr \n//with react-router, each component needs to be designed to work in isolation (fetch its own data","map":{"version":3,"sources":["/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","Component","componentDidMount","props","match","params","id","render","stream","retur","mapStateToProps","state","ownProps","console","log","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AACA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AACpBC,MAAAA,KAAK;AACN,KAHM,CAIP;AACA;;;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAZsC,C,CAiBzC;;;AACA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACI,OAAN,CAAcH,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAHD;;AAKA,eAAeR,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf,C,CAGA;AAEA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    //run second time\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  render() {\n    if(!this.props.stream){\n      retur\n    }\n    //run first time\n    // console.log(this.props);\n    return <div>StreamEdit</div>;\n  }\n\n}\n\n\n//ownProps reference of the props object\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\n\n\n//election reducer vs url based selection\n\n//refresh page undefind\n//but click edit page from otehr \n\n//with react-router, each component needs to be designed to work in isolation (fetch its own data"]},"metadata":{},"sourceType":"module"}