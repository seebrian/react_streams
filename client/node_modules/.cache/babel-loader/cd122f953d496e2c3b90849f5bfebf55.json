{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n/*const StreamList = () => {\n  return <div>StreamList</div>;\n};*/\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    console.log(stream.userId);\n    console.log(this.props.currentUserId);\n\n    if (stream.userId === this.props.currentUserId && !!this.props.currentUserId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right floated content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, this.renderAdmin(stream), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, stream.title, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, stream.description)));\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/streams/new\",\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Create\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Streams\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList); // can put null first export default connect(null,)(StreamList);\n//class compoent beacuse wanna call action creater in life cycle method\n// leave them as a object form in reducer because it make it easily to update add and delete records\n//but when we takes these streams and get them into a component through mapstatetoprops usually turn the object into an actual array  , make sure easy makeover  and map function","map":{"version":3,"sources":["/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","console","log","userId","currentUserId","renderList","streams","map","id","title","description","renderCreate","isSignedIn","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n/*const StreamList = () => {\n  return <div>StreamList</div>;\n};*/\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    console.log(stream.userId);\n    console.log(this.props.currentUserId);\n    if (stream.userId === this.props.currentUserId && !!this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <button className=\"ui button primary\">\n            Edit\n          </button>\n          <button className=\"ui button negative\">\n            Delete\n          </button>\n        </div>\n      );\n\n    }\n  }\n\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return(\n        <div>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create\n          </Link>\n        </div>\n      );\n    }\n  }\n  render() {\n\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n      </div>);\n  }\n}\nconst mapStateToProps = (state) => {\n\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n// can put null first export default connect(null,)(StreamList);\n\n\n//class compoent beacuse wanna call action creater in life cycle method\n\n\n\n\n// leave them as a object form in reducer because it make it easily to update add and delete records\n//but when we takes these streams and get them into a component through mapstatetoprops usually turn the object into an actual array  , make sure easy makeover  and map function"]},"metadata":{},"sourceType":"module"}