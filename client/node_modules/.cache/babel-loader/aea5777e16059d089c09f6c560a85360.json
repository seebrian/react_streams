{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n    this.render();\n    {\n      console.log(this.props);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      }, \"StreamEdit\");\n    }\n  }\n\n} //ownProps reference of the props object\n\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps)(StreamEdit); //election reducer vs url based selection\n//refresh page undefind\n//but click edit page from otehr \n//with react-router, each component needs to be designed to work in isolation (fetch its own data","map":{"version":3,"sources":["/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","Component","componentDidMount","props","match","params","id","render","console","log","mapStateToProps","state","ownProps","stream","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AACA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AAEA,SAAKC,MAAL;AACA;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;AACF;;AATsC,C,CAazC;;;AACA,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAHD;;AAKA,eAAeR,OAAO,CAACY,eAAD,CAAP,CAAyBV,UAAzB,CAAf,C,CAGA;AAEA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n\n    this.render()\n    {\n      console.log(this.props);\n      return <div>StreamEdit</div>;\n    }\n  }\n}\n\n\n//ownProps reference of the props object\nconst mapStateToProps = (state, ownProps) => {\n  console.log(ownProps);\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps)(StreamEdit);\n\n\n//election reducer vs url based selection\n\n//refresh page undefind\n//but click edit page from otehr \n\n//with react-router, each component needs to be designed to work in isolation (fetch its own data"]},"metadata":{},"sourceType":"module"}