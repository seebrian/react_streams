{"ast":null,"code":"var _jsxFileName = \"/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  //cannot assume that the stream has already been loaded up\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    const id = this.props.match.params.id;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.deleteStream(id),\n      className: \"ui button negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"ui  button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delte this stream?\";\n    }\n\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete); //if call onclick={this.props.deleteStream} mean passing a reference","map":{"version":3,"sources":["/Users/brian/Documents/udemy/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Link","Modal","history","fetchStream","deleteStream","StreamDelete","Component","componentDidMount","console","log","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;AACA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACzC;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDC,EAAAA,aAAa,GAAG;AACd,UAAMD,EAAE,GAAC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWN,YAAX,CAAwBS,EAAxB,CAAvB;AAAoD,MAAA,SAAS,EAAC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAEDE,EAAAA,aAAa,GAAG;AACd,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACtB,aAAO,6CAAP;AACD;;AAED,WAAQ,0DAAyD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAM,EAAzF;AACD;;AACDC,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,eAAb;AAA6B,MAAA,OAAO,EAAE,KAAKH,aAAL,EAAtC;AAA4D,MAAA,OAAO,EAAE,KAAKD,aAAL,EAArE;AAA2F,MAAA,SAAS,EAAE,MAAMZ,OAAO,CAACiB,IAAR,CAAa,GAAb,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA5BwC;;AA+B3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAGA,eAAed,OAAO,CAACqB,eAAD,EAAkB;AAAEjB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CAAwDC,YAAxD,CAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\nclass StreamDelete extends React.Component {\n  //cannot assume that the stream has already been loaded up\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  renderActions() {\n    const id=this.props.match.params.id;\n    return (\n      <React.Fragment>\n        <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n        <Link to=\"/\" className=\"ui  button\">Cancel</Link>\n      </React.Fragment>\n    );\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delte this stream?\"\n    }\n\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n  }\n  render() {\n\n    return (\n      <Modal title=\"Delete Stream\" content={this.renderContent()} actions={this.renderActions()} onDismiss={() => history.push('/')} />\n    );\n  };\n  //pass JSX element to action\n}\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n};\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);\n\n//if call onclick={this.props.deleteStream} mean passing a reference"]},"metadata":{},"sourceType":"module"}